version: "3.7"

networks:
  backend:
    driver: ${NETWORKS_DRIVER}
  frontend:
    driver: ${NETWORKS_DRIVER}

services:

  api:
    build: ./api
    container_name: api
    restart: always
    tty: true
    environment:
      - FLASK_DEBUG=${FLASK_DEBUG}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOSTDOCKER=${POSTGRES_HOSTDOCKER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./api:/app
    expose:
      - 8080
    networks:
      - frontend
      - backend
    depends_on:
      - postgres

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - api
    networks:
      - frontend
      - backend

  postgres:
    build: ./postgres
    tty: true
    container_name: dbp
    image: postgres:10
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

